import tkinter
import random
import time
from multiprocessing import Process
from threading import Thread
"""
Created by Jonathon Scofield

A simple game to experiment with tkinter. Ship moves left and right and destroys incoming objects. Score system put in place.
Still in early phases.
Could probably submit to steam for $5 if I wanted to be a jerk.
"""



"""
Event that monitors keypresses for interaction with games
'a' for Left, 'd' for right

Arguments:
    event: event generated by keypress
"""

def keypress(event):
    if(event.char == 'd') and (sc[5] < 800):
        lblTest.config(text="Moving Right")
        movingShip(1)
    elif(event.char == 'a') and (sc[0] > 0):
        lblTest.config(text="Moving Left")
        movingShip(-1)

"""
Moves the ship to left and right

Arguments:
    x: takes in '-1 or '1' to determine if ship moves left or right

"""
def movingShip(x):
    if(x == 1):
        sc[0] += 10
        sc[5] += 10
    elif(x == -1):
        sc[0] -= 10
        sc[5] -= 10
    ally.move(ship, x*10, 0)
    mainWindow.update()
    

def moveEnemy(shippy, randx):
    # if (randx == 1) and (esquare[2] + 10 > 700):
    #     randx = -1
    # elif (randx == -1) and (esquare[0] - 10 < 0):
    #     randx = 1
    enemy.move(shippy, randx*10, 10)
    mainWindow.update()
    time.sleep(.5)
    

def enemySpawn(ax, ay, bx, by):
    randx = random.choice([1, -1])
    esquare = [ax, ay, bx, by]
    eShip = enemy.create_rectangle(esquare[0], esquare[1], esquare[2], esquare[3], fill='blue')
    while True:
        if (randx == 1) and (esquare[2] + 10 > 700):
            randx = -1
        elif (randx == -1) and (esquare[0] - 10 < 0):
            randx = 1
        enemy.move(eShip, randx*10, 10)
        mainWindow.update()
        time.sleep(.5)


mainWindow=tkinter.Tk()
mainWindow.title("SPACE PYTHON")
mainWindow.geometry("800x800")
mainWindow.minsize(width=800, height=800)
mainWindow.maxsize(width=800, height=800)

mainWindow.columnconfigure(0, weight=5)
mainWindow.columnconfigure(1, weight=5)
mainWindow.columnconfigure(2, weight=5)
mainWindow.rowconfigure(0, weight=5)
mainWindow.rowconfigure(1, weight=5)
mainWindow.rowconfigure(2, weight=5)

scoreFrame = tkinter.Frame(mainWindow)
shootyFrame = tkinter.Frame(mainWindow)
shipFrame = tkinter.Frame(mainWindow)

scoreFrame.pack(side='top')
shootyFrame.pack(side='top')
mainWindow.bind("<Key>", keypress)
shipFrame.pack(side='bottom')
enemy = tkinter.Canvas(shootyFrame, width=800, height=600)
ally = tkinter.Canvas(shipFrame, width=800, height=100)
enemy.pack()
ally.pack()

sc = [0, 100, 50, 0, 100, 100]
ship = ally.create_polygon(sc[0], sc[1], sc[2], sc[3], sc[4], sc[5], fill='red', width=4)
lblTest = tkinter.Label(scoreFrame, text = "Test label")
lblTest.pack()

if __name__ == '__main__':
    p = Process(target=enemySpawn, args=(0,0,100,100,))
    p.start()
    p.join()
# addEnemy = Thread(target = enemySpawn(200, 200, 300, 300))
# addEnemy.start()
# e2 = Thread(target = enemySpawn(0, 0, 300, 300))
# e2.start()

mainWindow.mainloop()


